{"ast":null,"code":"var _jsxFileName = \"/home/veer/Documents/JavaScript/messenger-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './css/App.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [ws, setWs] = useState(null);\n  const messageBoxRef = useRef(null);\n  const [selectedReceiver, setSelectedReceiver] = useState(null);\n  const [activeUsers, setActiveUsers] = useState([]);\n  useEffect(() => {\n    const socket = new WebSocket('ws://192.168.0.132:8880/chat');\n    setWs(socket);\n    socket.onopen = () => {\n      console.log('Connected to WebSocket');\n    };\n\n    // Handle incoming messages from the server\n    socket.onmessage = event => {\n      const incomingMessage = JSON.parse(event.data);\n      switch (incomingMessage.type) {\n        case 'users':\n          setActiveUsers(incomingMessage.data);\n          console.log('Active users:', incomingMessage.data);\n          break;\n        case 'message':\n          setMessages(prevMessages => [...prevMessages, {\n            sender: incomingMessage.sender,\n            text: incomingMessage.text\n          }]);\n          break;\n        case 'video':\n          console.log(\"Don't Receive video data\");\n          break;\n        case 'audio':\n          console.log(\"Don't Receive audio data\");\n          break;\n        default:\n          console.log('Unknown message type:', incomingMessage.type);\n      }\n    };\n\n    // Handle errors\n    socket.onerror = error => {\n      console.error('WebSocket error: ', error);\n    };\n\n    // Handle WebSocket closure\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    // Set WebSocket connection state\n    setWs(socket);\n\n    // Cleanup WebSocket connection when component is unmounted\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, []);\n  const sendMessage = () => {\n    if (ws && message.trim() && selectedReceiver) {\n      const sender = ''; // Hardcoded or dynamically set sender IP and port\n      const receiver = selectedReceiver; // Use the selected receiver from the UI\n\n      const messageData = {\n        sender: sender,\n        receiver: receiver,\n        text: message\n      };\n      ws.send(JSON.stringify(messageData));\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'You',\n        text: message,\n        isSender: true\n      }]);\n      setMessage('');\n      messageBoxRef.current.focus();\n    } else {\n      alert('Please select a receiver before sending a message.');\n    }\n  };\n  const handleReceiverSelect = receiverId => {\n    setSelectedReceiver(receiverId); // Set the selected receiver's IP:port\n    setMessages([]); // Clear the message box when switching users\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Active Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleReceiverSelect(user.id),\n            style: {\n              cursor: 'pointer',\n              backgroundColor: selectedReceiver === user.id ? '#ddd' : 'transparent',\n              padding: '5px'\n            },\n            children: [user.name, \" (\", user.id, \")\"]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-box\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isSender ? 'sent' : 'received'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          ref: messageBoxRef,\n          placeholder: \"Type your message\",\n          className: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bhU0mnTTLfrqFdehKr26ZwQ/A2c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","message","setMessage","messages","setMessages","ws","setWs","messageBoxRef","selectedReceiver","setSelectedReceiver","activeUsers","setActiveUsers","socket","WebSocket","onopen","console","log","onmessage","event","incomingMessage","JSON","parse","data","type","prevMessages","sender","text","onerror","error","onclose","close","sendMessage","trim","receiver","messageData","send","stringify","isSender","current","focus","alert","handleReceiverSelect","receiverId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","id","style","cursor","backgroundColor","padding","name","msg","index","value","onChange","e","target","ref","placeholder","_c","$RefreshReg$"],"sources":["/home/veer/Documents/JavaScript/messenger-client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './css/App.css'; // Import CSS for styling\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [ws, setWs] = useState(null);\n  const messageBoxRef = useRef(null);\n  const [selectedReceiver, setSelectedReceiver] = useState(null);\n  const [activeUsers, setActiveUsers] = useState([]);\n\n\n  useEffect(() => {\n    const socket = new WebSocket('ws://192.168.0.132:8880/chat');\n  setWs(socket);\n\n  socket.onopen = () => {\n    console.log('Connected to WebSocket');\n  };\n\n    // Handle incoming messages from the server\n    socket.onmessage = (event) => {\n      const incomingMessage = JSON.parse(event.data);\n\n      switch (incomingMessage.type) {\n        case 'users':\n          setActiveUsers(incomingMessage.data);\n          console.log('Active users:', incomingMessage.data);\n          break;\n        case 'message':\n          setMessages((prevMessages) => [\n            ...prevMessages,\n            { sender: incomingMessage.sender, text: incomingMessage.text },\n          ]);\n          break;\n        case 'video':\n          console.log(\"Don't Receive video data\");\n          break;\n        case 'audio':\n          console.log(\"Don't Receive audio data\");\n          break;\n        default:\n          console.log('Unknown message type:', incomingMessage.type);\n      }\n    };\n\n    // Handle errors\n    socket.onerror = (error) => {\n      console.error('WebSocket error: ', error);\n    };\n\n    // Handle WebSocket closure\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    // Set WebSocket connection state\n    setWs(socket);\n\n    // Cleanup WebSocket connection when component is unmounted\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if (ws && message.trim() && selectedReceiver) {\n      const sender = ''; // Hardcoded or dynamically set sender IP and port\n      const receiver = selectedReceiver; // Use the selected receiver from the UI\n\n      const messageData = {\n        sender: sender,\n        receiver: receiver,\n        text: message,\n      };\n\n      ws.send(JSON.stringify(messageData));\n\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: 'You', text: message, isSender: true },\n      ]);\n\n      setMessage('');\n      messageBoxRef.current.focus();\n    } else {\n      alert('Please select a receiver before sending a message.');\n    }\n  };\n\n  const handleReceiverSelect = (receiverId) => {\n    setSelectedReceiver(receiverId); // Set the selected receiver's IP:port\n    setMessages([]); // Clear the message box when switching users\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>WebSocket Chat</h1>\n\n      <div className=\"chat-container\">\n        {/* Active Users List */}\n        <div className=\"users-list\">\n          <h3>Active Users</h3>\n          <ul>\n            {activeUsers.map((user) => (\n              <li\n                key={user.id}\n                onClick={() => handleReceiverSelect(user.id)}\n                style={{\n                  cursor: 'pointer',\n                  backgroundColor: selectedReceiver === user.id ? '#ddd' : 'transparent',\n                  padding: '5px',\n                }}\n              >\n                {user.name} ({user.id})\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Message Box */}\n        <div className=\"message-box\">\n          {messages.map((msg, index) => (\n            <div\n              key={index}\n              className={`message ${msg.isSender ? 'sent' : 'received'}`}\n            >\n              <strong>{msg.sender}:</strong> {msg.text}\n            </div>\n          ))}\n        </div>\n\n        {/* Message Input */}\n        <div className=\"input-area\">\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            ref={messageBoxRef}\n            placeholder=\"Type your message\"\n            className=\"message-input\"\n          />\n          <button onClick={sendMessage} className=\"send-button\">Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}