{"ast":null,"code":"var _jsxFileName = \"/home/veer/Documents/JavaScript/messenger-client/src/components/WebSocketClient.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WebSocketClient() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [receiver, setReceiver] = useState(null);\n  const [senderIp, setSenderIp] = useState(\"\");\n  const [senderPort, setSenderPort] = useState(\"\");\n  const socketRef = useRef(null); // Use a ref to persist the WebSocket instance\n\n  useEffect(() => {\n    // Initialize WebSocket connection\n    const socket = new WebSocket(\"ws://192.168.0.132:8880/chat\");\n    socketRef.current = socket;\n    socket.onopen = () => {\n      console.log(\"Connected to WebSocket server\");\n    };\n    socket.onmessage = event => {\n      console.log(\"Incoming message:\", event.data);\n      try {\n        const data = JSON.parse(event.data);\n        setMessages(prevMessages => [...prevMessages, `${data.sender}: ${data.text}`]);\n      } catch (error) {\n        console.error(\"Error parsing incoming message:\", error);\n      }\n    };\n    socket.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n    };\n    socket.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n    };\n\n    // Clean up on unmount (close WebSocket connection)\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n        console.log(\"WebSocket connection cleaned up\");\n      }\n    };\n  }, []);\n  useEffect(() => {\n    // Fetch active users list from the server using axios\n    axios.get(\"http://192.168.0.132:8880/active-users\").then(response => {\n      const users = Object.keys(response.data);\n      setActiveUsers(users);\n\n      // Extract sender's IP and port from the response\n      const currentUser = users.find(user => user.startsWith(\"192.168.0.132\"));\n      if (currentUser) {\n        const [ip, port] = currentUser.split(\":\");\n        setSenderIp(ip);\n        setSenderPort(port);\n      } else {\n        console.error(\"Current user not found in active users list.\");\n      }\n    }).catch(error => {\n      console.error(\"Error fetching active users:\", error);\n    });\n  }, []);\n  const sendMessage = () => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN && message && receiver && senderIp && senderPort) {\n      const msg = {\n        sender: `${senderIp}:${senderPort}`,\n        receiver: receiver,\n        text: message\n      };\n      console.log(\"Sending message:\", msg);\n      socketRef.current.send(JSON.stringify(msg));\n      setMessages(prevMessages => [...prevMessages, `You: ${message}`]);\n      setMessage(\"\");\n    } else {\n      console.log(\"Missing data to send message or WebSocket not open\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.length > 0 ? activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setReceiver(user),\n          children: user\n        }, user, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No active users found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), receiver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat with \", receiver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 44\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(WebSocketClient, \"4fe5GiKTCvtT8+kIFTTziFsFpcQ=\");\n_c = WebSocketClient;\nexport default WebSocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebSocketClient\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","WebSocketClient","_s","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","receiver","setReceiver","senderIp","setSenderIp","senderPort","setSenderPort","socketRef","socket","WebSocket","current","onopen","console","log","onmessage","event","data","JSON","parse","prevMessages","sender","text","error","onclose","onerror","close","get","then","response","users","Object","keys","currentUser","find","user","startsWith","ip","port","split","catch","sendMessage","readyState","OPEN","msg","send","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/veer/Documents/JavaScript/messenger-client/src/components/WebSocketClient.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\n\nfunction WebSocketClient() {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [receiver, setReceiver] = useState(null);\n  const [senderIp, setSenderIp] = useState(\"\");\n  const [senderPort, setSenderPort] = useState(\"\");\n  const socketRef = useRef(null); // Use a ref to persist the WebSocket instance\n\n  useEffect(() => {\n    // Initialize WebSocket connection\n    const socket = new WebSocket(\"ws://192.168.0.132:8880/chat\");\n    socketRef.current = socket;\n\n    socket.onopen = () => {\n      console.log(\"Connected to WebSocket server\");\n    };\n\n    socket.onmessage = (event) => {\n      console.log(\"Incoming message:\", event.data);\n      try {\n        const data = JSON.parse(event.data);\n        setMessages((prevMessages) => [...prevMessages, `${data.sender}: ${data.text}`]);\n      } catch (error) {\n        console.error(\"Error parsing incoming message:\", error);\n      }\n    };\n\n    socket.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n    };\n\n    socket.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n    };\n\n    // Clean up on unmount (close WebSocket connection)\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n        console.log(\"WebSocket connection cleaned up\");\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Fetch active users list from the server using axios\n    axios\n      .get(\"http://192.168.0.132:8880/active-users\")\n      .then((response) => {\n        const users = Object.keys(response.data);\n        setActiveUsers(users);\n\n        // Extract sender's IP and port from the response\n        const currentUser = users.find((user) => user.startsWith(\"192.168.0.132\"));\n        if (currentUser) {\n          const [ip, port] = currentUser.split(\":\");\n          setSenderIp(ip);\n          setSenderPort(port);\n        } else {\n          console.error(\"Current user not found in active users list.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching active users:\", error);\n      });\n  }, []);\n\n  const sendMessage = () => {\n    if (\n      socketRef.current &&\n      socketRef.current.readyState === WebSocket.OPEN &&\n      message &&\n      receiver &&\n      senderIp &&\n      senderPort\n    ) {\n      const msg = {\n        sender: `${senderIp}:${senderPort}`,\n        receiver: receiver,\n        text: message,\n      };\n      console.log(\"Sending message:\", msg);\n      socketRef.current.send(JSON.stringify(msg));\n      setMessages((prevMessages) => [...prevMessages, `You: ${message}`]);\n      setMessage(\"\");\n    } else {\n      console.log(\"Missing data to send message or WebSocket not open\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chat Application</h1>\n\n      <div>\n        <h2>Active Users</h2>\n        <ul>\n          {activeUsers.length > 0 ? (\n            activeUsers.map((user) => (\n              <li key={user} onClick={() => setReceiver(user)}>\n                {user}\n              </li>\n            ))\n          ) : (\n            <p>No active users found.</p>\n          )}\n        </ul>\n      </div>\n\n      {receiver && (\n        <div>\n          <h2>Chat with {receiver}</h2>\n          <div>\n            {messages.length > 0 ? (\n              messages.map((msg, index) => <p key={index}>{msg}</p>)\n            ) : (\n              <p>No messages yet.</p>\n            )}\n          </div>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Type a message\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WebSocketClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}