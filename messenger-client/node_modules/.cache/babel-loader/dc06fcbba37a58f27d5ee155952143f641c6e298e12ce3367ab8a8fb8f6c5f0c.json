{"ast":null,"code":"var _jsxFileName = \"/home/veer/Documents/JavaScript/messenger-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./css/App.css\"; // Create a CSS file for styling\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [senderIp, setSenderIp] = useState(\"192.168.0.106:57606\");\n  const socketRef = useRef(null);\n\n  // Retry mechanism for WebSocket connection\n  const connectWebSocket = () => {\n    socketRef.current = new WebSocket(\"ws://192.168.0.132:8880/chat\");\n    socketRef.current.onopen = () => {\n      console.log(\"WebSocket connection established\");\n      // Fetch active users after WebSocket is connected\n      axios.get(\"http://192.168.0.132:8880/active-users\").then(response => setActiveUsers(response.data)).catch(error => console.error(\"Error fetching active users:\", error));\n    };\n    socketRef.current.onmessage = event => {\n      const incomingMessage = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, incomingMessage]);\n    };\n    socketRef.current.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n      setTimeout(connectWebSocket, 3000); // Retry after 3 seconds if there's an error\n    };\n    socketRef.current.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n      setTimeout(connectWebSocket, 3000); // Retry after 3 seconds if connection is closed\n    };\n  };\n  useEffect(() => {\n    connectWebSocket(); // Initiate WebSocket connection\n\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n      }\n    };\n  }, []);\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    setMessages([]); // Clear chat history when a new user is selected\n  };\n  const handleSendMessage = () => {\n    if (newMessage.trim() && selectedUser && senderIp) {\n      const message = {\n        sender: senderIp,\n        receiver: selectedUser.ip,\n        text: newMessage\n      };\n      socketRef.current.send(JSON.stringify(message));\n      setMessages(prevMessages => [...prevMessages, message]);\n      setNewMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), activeUsers.length > 0 ? activeUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `user-item ${user === selectedUser ? \"selected\" : \"\"}`,\n        onClick: () => handleUserSelect(user),\n        children: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No active users found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [\"Chat with \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender === senderIp ? \"sent\" : \"received\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-user-selected\",\n        children: \"Select a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uRPiWK2qH9eB/qT5XUBPPWInZwQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","activeUsers","setActiveUsers","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","senderIp","setSenderIp","socketRef","connectWebSocket","current","WebSocket","onopen","console","log","get","then","response","data","catch","error","onmessage","event","incomingMessage","JSON","parse","prevMessages","onerror","setTimeout","onclose","close","handleUserSelect","user","handleSendMessage","trim","message","sender","receiver","ip","text","send","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onClick","msg","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/veer/Documents/JavaScript/messenger-client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./css/App.css\"; // Create a CSS file for styling\nimport axios from \"axios\";\n\nconst App = () => {\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [senderIp, setSenderIp] = useState(\"192.168.0.106:57606\");\n  const socketRef = useRef(null);\n\n  // Retry mechanism for WebSocket connection\n  const connectWebSocket = () => {\n    socketRef.current = new WebSocket(\"ws://192.168.0.132:8880/chat\");\n\n    socketRef.current.onopen = () => {\n      console.log(\"WebSocket connection established\");\n      // Fetch active users after WebSocket is connected\n      axios\n        .get(\"http://192.168.0.132:8880/active-users\")\n        .then((response) => setActiveUsers(response.data))\n        .catch((error) => console.error(\"Error fetching active users:\", error));\n    };\n\n    socketRef.current.onmessage = (event) => {\n      const incomingMessage = JSON.parse(event.data);\n      setMessages((prevMessages) => [...prevMessages, incomingMessage]);\n    };\n\n    socketRef.current.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n      setTimeout(connectWebSocket, 3000); // Retry after 3 seconds if there's an error\n    };\n\n    socketRef.current.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n      setTimeout(connectWebSocket, 3000); // Retry after 3 seconds if connection is closed\n    };\n  };\n\n  useEffect(() => {\n    connectWebSocket(); // Initiate WebSocket connection\n\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n      }\n    };\n  }, []);\n\n  const handleUserSelect = (user) => {\n    setSelectedUser(user);\n    setMessages([]); // Clear chat history when a new user is selected\n  };\n\n  const handleSendMessage = () => {\n    if (newMessage.trim() && selectedUser && senderIp) {\n      const message = {\n        sender: senderIp,\n        receiver: selectedUser.ip, \n        text: newMessage,\n      };\n      socketRef.current.send(JSON.stringify(message));\n      setMessages((prevMessages) => [...prevMessages, message]);\n      setNewMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"user-list\">\n        <h3>Active Users</h3>\n        {activeUsers.length > 0 ? (\n          activeUsers.map((user, index) => (\n            <div\n              key={index}\n              className={`user-item ${user === selectedUser ? \"selected\" : \"\"}`}\n              onClick={() => handleUserSelect(user)}\n            >\n              {user}\n            </div>\n          ))\n        ) : (\n          <div>No active users found</div>\n        )}\n      </div>\n      <div className=\"chat-box\">\n        {selectedUser ? (\n          <>\n            <div className=\"chat-header\">Chat with {selectedUser}</div>\n            <div className=\"chat-messages\">\n              {messages.map((msg, index) => (\n                <div\n                  key={index}\n                  className={`message ${\n                    msg.sender === senderIp ? \"sent\" : \"received\"\n                  }`}\n                >\n                  <p>{msg.text}</p>\n                </div>\n              ))}\n            </div>\n            <div className=\"chat-input\">\n              <input\n                type=\"text\"\n                placeholder=\"Type a message...\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n              />\n              <button onClick={handleSendMessage}>Send</button>\n            </div>\n          </>\n        ) : (\n          <div className=\"no-user-selected\">Select a user to start chatting</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}