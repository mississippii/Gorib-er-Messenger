{"ast":null,"code":"var _jsxFileName = \"/home/veer/Documents/JavaScript/messenger-client/src/components/WebSocketClient.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WebSocketClient() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [receiver, setReceiver] = useState(null);\n  const [senderIp, setSenderIp] = useState(\"\");\n  const [senderPort, setSenderPort] = useState(\"\");\n  useEffect(() => {\n    // Create WebSocket connection only once when the component mounts\n    const socket = new WebSocket(\"ws://192.168.0.132:8880/chat\");\n    socket.onopen = () => {\n      console.log(\"Connected to WebSocket server\");\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, data.text]);\n    };\n\n    // Store socket in state to be used later\n    setSocket(socket);\n\n    // Clean up on unmount (close WebSocket connection)\n    return () => {\n      socket.close();\n    };\n  }, []); // Empty dependency array to ensure this effect only runs once\n\n  useEffect(() => {\n    // Fetch your client IP and port from an API or WebSocket connection\n    axios.get(\"http://192.168.0.132:8880/active-users\").then(response => {\n      setSenderIp(response.data.ip);\n      setSenderPort(response.data.port);\n    }).catch(error => {\n      console.error(\"Error fetching client info:\", error);\n    });\n  }, []);\n  const sendMessage = () => {\n    if (socket && message && receiver && senderIp && senderPort) {\n      const msg = {\n        sender: `${senderIp}:${senderPort}`,\n        // Use dynamic IP and port\n        receiver: receiver,\n        text: message\n      };\n      socket.send(JSON.stringify(msg));\n      setMessages(prevMessages => [...prevMessages, `You: ${message}`]);\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setReceiver(user),\n          children: user\n        }, user, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), receiver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat with \", receiver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(WebSocketClient, \"LGWgpwYm3dBArVD3kcEIwpdvyas=\");\n_c = WebSocketClient;\nexport default WebSocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebSocketClient\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WebSocketClient","_s","socket","setSocket","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","receiver","setReceiver","senderIp","setSenderIp","senderPort","setSenderPort","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","prevMessages","text","close","get","then","response","ip","port","catch","error","sendMessage","msg","sender","send","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/veer/Documents/JavaScript/messenger-client/src/components/WebSocketClient.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction WebSocketClient() {\n  const [socket, setSocket] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [receiver, setReceiver] = useState(null);\n  const [senderIp, setSenderIp] = useState(\"\");\n  const [senderPort, setSenderPort] = useState(\"\");\n\n  useEffect(() => {\n    // Create WebSocket connection only once when the component mounts\n    const socket = new WebSocket(\"ws://192.168.0.132:8880/chat\");\n\n    socket.onopen = () => {\n      console.log(\"Connected to WebSocket server\");\n    };\n\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, data.text]);\n    };\n\n    // Store socket in state to be used later\n    setSocket(socket);\n\n    // Clean up on unmount (close WebSocket connection)\n    return () => {\n      socket.close();\n    };\n  }, []); // Empty dependency array to ensure this effect only runs once\n\n  useEffect(() => {\n    // Fetch your client IP and port from an API or WebSocket connection\n    axios.get(\"http://192.168.0.132:8880/active-users\")\n      .then(response => {\n        setSenderIp(response.data.ip);\n        setSenderPort(response.data.port);\n      })\n      .catch(error => {\n        console.error(\"Error fetching client info:\", error);\n      });\n  }, []);\n  const sendMessage = () => {\n    if (socket && message && receiver && senderIp && senderPort) {\n      const msg = {\n        sender: `${senderIp}:${senderPort}`,  // Use dynamic IP and port\n        receiver: receiver,\n        text: message,\n      };\n      socket.send(JSON.stringify(msg));\n      setMessages(prevMessages => [...prevMessages, `You: ${message}`]);\n      setMessage(\"\");\n    }\n  };\n  \n\n  return (\n    <div>\n      <h1>Chat Application</h1>\n      <div>\n        <h2>Active Users</h2>\n        <ul>\n          {activeUsers.map(user => (\n            <li key={user} onClick={() => setReceiver(user)}>\n              {user}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {receiver && (\n        <div>\n          <h2>Chat with {receiver}</h2>\n          <div>\n            {messages.map((msg, index) => (\n              <p key={index}>{msg}</p>\n            ))}\n          </div>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={e => setMessage(e.target.value)}\n            placeholder=\"Type a message\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WebSocketClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}