{"ast":null,"code":"var _jsxFileName = \"/home/veer/Documents/JavaScript/messenger-client/src/components/WebSocketClient.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { createWebSocket, closeWebSocket, getWebSocketInstance } from \"./WebSocketService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WebSocketClient() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [receiver, setReceiver] = useState(null);\n  const [senderIp, setSenderIp] = useState(\"\");\n  const [senderPort, setSenderPort] = useState(\"\");\n  useEffect(() => {\n    // Initialize WebSocket singleton\n    const socket = createWebSocket(\"ws://192.168.0.132:8880/chat\");\n    socket.onmessage = event => {\n      console.log(\"Incoming message:\", event.data);\n      try {\n        const data = JSON.parse(event.data);\n        setMessages(prevMessages => [...prevMessages, `${data.sender}: ${data.text}`]);\n      } catch (error) {\n        console.error(\"Error parsing incoming message:\", error);\n      }\n    };\n\n    // Cleanup on unmount\n    return () => {\n      closeWebSocket();\n    };\n  }, []);\n  useEffect(() => {\n    // Fetch active users list from the server using axios\n    axios.get(\"http://192.168.0.132:8880/active-users\").then(response => {\n      const users = Object.keys(response.data);\n      setActiveUsers(users);\n\n      // Extract sender's IP and port from the response\n      const currentUser = users.find(user => user.startsWith(\"192.168.0.132\"));\n      if (currentUser) {\n        const [ip, port] = currentUser.split(\":\");\n        setSenderIp(ip);\n        setSenderPort(port);\n      } else {\n        console.error(\"Current user not found in active users list.\");\n      }\n    }).catch(error => {\n      console.error(\"Error fetching active users:\", error);\n    });\n  }, []);\n  const sendMessage = () => {\n    const socket = getWebSocketInstance();\n    if (socket && socket.readyState === WebSocket.OPEN && message && receiver && senderIp && senderPort) {\n      const msg = {\n        sender: `${senderIp}:${senderPort}`,\n        receiver: receiver,\n        text: message\n      };\n      console.log(\"Sending message:\", msg);\n      socket.send(JSON.stringify(msg));\n      setMessages(prevMessages => [...prevMessages, `You: ${message}`]);\n      setMessage(\"\");\n    } else {\n      console.log(\"Missing data to send message or WebSocket not open\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.length > 0 ? activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setReceiver(user),\n          children: user\n        }, user, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No active users found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), receiver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat with \", receiver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 44\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(WebSocketClient, \"NTSTvSt8d1nJu4oj9FoqQwlW0gM=\");\n_c = WebSocketClient;\nexport default WebSocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebSocketClient\");","map":{"version":3,"names":["React","useState","useEffect","axios","createWebSocket","closeWebSocket","getWebSocketInstance","jsxDEV","_jsxDEV","WebSocketClient","_s","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","receiver","setReceiver","senderIp","setSenderIp","senderPort","setSenderPort","socket","onmessage","event","console","log","data","JSON","parse","prevMessages","sender","text","error","get","then","response","users","Object","keys","currentUser","find","user","startsWith","ip","port","split","catch","sendMessage","readyState","WebSocket","OPEN","msg","send","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/veer/Documents/JavaScript/messenger-client/src/components/WebSocketClient.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { createWebSocket, closeWebSocket, getWebSocketInstance } from \"./WebSocketService\";\n\nfunction WebSocketClient() {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [receiver, setReceiver] = useState(null);\n  const [senderIp, setSenderIp] = useState(\"\");\n  const [senderPort, setSenderPort] = useState(\"\");\n\n  useEffect(() => {\n    // Initialize WebSocket singleton\n    const socket = createWebSocket(\"ws://192.168.0.132:8880/chat\");\n\n    socket.onmessage = (event) => {\n      console.log(\"Incoming message:\", event.data);\n      try {\n        const data = JSON.parse(event.data);\n        setMessages((prevMessages) => [...prevMessages, `${data.sender}: ${data.text}`]);\n      } catch (error) {\n        console.error(\"Error parsing incoming message:\", error);\n      }\n    };\n\n    // Cleanup on unmount\n    return () => {\n      closeWebSocket();\n    };\n  }, []);\n\n  useEffect(() => {\n    // Fetch active users list from the server using axios\n    axios\n      .get(\"http://192.168.0.132:8880/active-users\")\n      .then((response) => {\n        const users = Object.keys(response.data);\n        setActiveUsers(users);\n\n        // Extract sender's IP and port from the response\n        const currentUser = users.find((user) => user.startsWith(\"192.168.0.132\"));\n        if (currentUser) {\n          const [ip, port] = currentUser.split(\":\");\n          setSenderIp(ip);\n          setSenderPort(port);\n        } else {\n          console.error(\"Current user not found in active users list.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching active users:\", error);\n      });\n  }, []);\n\n  const sendMessage = () => {\n    const socket = getWebSocketInstance();\n    if (socket && socket.readyState === WebSocket.OPEN && message && receiver && senderIp && senderPort) {\n      const msg = {\n        sender: `${senderIp}:${senderPort}`,\n        receiver: receiver,\n        text: message,\n      };\n      console.log(\"Sending message:\", msg);\n      socket.send(JSON.stringify(msg));\n      setMessages((prevMessages) => [...prevMessages, `You: ${message}`]);\n      setMessage(\"\");\n    } else {\n      console.log(\"Missing data to send message or WebSocket not open\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chat Application</h1>\n\n      <div>\n        <h2>Active Users</h2>\n        <ul>\n          {activeUsers.length > 0 ? (\n            activeUsers.map((user) => (\n              <li key={user} onClick={() => setReceiver(user)}>\n                {user}\n              </li>\n            ))\n          ) : (\n            <p>No active users found.</p>\n          )}\n        </ul>\n      </div>\n\n      {receiver && (\n        <div>\n          <h2>Chat with {receiver}</h2>\n          <div>\n            {messages.length > 0 ? (\n              messages.map((msg, index) => <p key={index}>{msg}</p>)\n            ) : (\n              <p>No messages yet.</p>\n            )}\n          </div>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Type a message\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WebSocketClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}