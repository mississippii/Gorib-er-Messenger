{"ast":null,"code":"var _jsxFileName = \"/home/veer/Documents/JavaScript/messenger-client/src/components/WebSocketClient.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WebSocketClient() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [receiver, setReceiver] = useState(null);\n  useEffect(() => {\n    // Create WebSocket connection only once when the component mounts\n    const socket = new WebSocket(\"ws://<server-ip>:<port>/chat\");\n    socket.onopen = () => {\n      console.log(\"Connected to WebSocket server\");\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, data.text]);\n    };\n\n    // Store socket in state to be used later\n    setSocket(socket);\n\n    // Clean up on unmount (close WebSocket connection)\n    return () => {\n      socket.close();\n    };\n  }, []); // Empty dependency array to ensure this effect only runs once\n\n  useEffect(() => {\n    // Fetch active users list from the server\n    fetch(\"/api/active-users\").then(response => response.json()).then(data => setActiveUsers(data));\n  }, []);\n  const sendMessage = () => {\n    if (socket && message && receiver) {\n      const msg = {\n        sender: \"your-ip:your-port\",\n        // Use dynamic IP and port\n        receiver: receiver,\n        text: message\n      };\n      socket.send(JSON.stringify(msg));\n      setMessages(prevMessages => [...prevMessages, `You: ${message}`]);\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setReceiver(user),\n          children: user\n        }, user, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), receiver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat with \", receiver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(WebSocketClient, \"VWtl2a8U4uxEVJKeeTYOLxQYJws=\");\n_c = WebSocketClient;\nexport default WebSocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebSocketClient\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WebSocketClient","_s","socket","setSocket","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","receiver","setReceiver","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","prevMessages","text","close","fetch","then","response","json","sendMessage","msg","sender","send","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/veer/Documents/JavaScript/messenger-client/src/components/WebSocketClient.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction WebSocketClient() {\n  const [socket, setSocket] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [receiver, setReceiver] = useState(null);\n\n  useEffect(() => {\n    // Create WebSocket connection only once when the component mounts\n    const socket = new WebSocket(\"ws://<server-ip>:<port>/chat\");\n\n    socket.onopen = () => {\n      console.log(\"Connected to WebSocket server\");\n    };\n\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, data.text]);\n    };\n\n    // Store socket in state to be used later\n    setSocket(socket);\n\n    // Clean up on unmount (close WebSocket connection)\n    return () => {\n      socket.close();\n    };\n  }, []); // Empty dependency array to ensure this effect only runs once\n\n  useEffect(() => {\n    // Fetch active users list from the server\n    fetch(\"/api/active-users\")\n      .then(response => response.json())\n      .then(data => setActiveUsers(data));\n  }, []);\n\n  const sendMessage = () => {\n    if (socket && message && receiver) {\n      const msg = {\n        sender: \"your-ip:your-port\",  // Use dynamic IP and port\n        receiver: receiver,\n        text: message,\n      };\n      socket.send(JSON.stringify(msg));\n      setMessages(prevMessages => [...prevMessages, `You: ${message}`]);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chat Application</h1>\n      <div>\n        <h2>Active Users</h2>\n        <ul>\n          {activeUsers.map(user => (\n            <li key={user} onClick={() => setReceiver(user)}>\n              {user}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {receiver && (\n        <div>\n          <h2>Chat with {receiver}</h2>\n          <div>\n            {messages.map((msg, index) => (\n              <p key={index}>{msg}</p>\n            ))}\n          </div>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={e => setMessage(e.target.value)}\n            placeholder=\"Type a message\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WebSocketClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}